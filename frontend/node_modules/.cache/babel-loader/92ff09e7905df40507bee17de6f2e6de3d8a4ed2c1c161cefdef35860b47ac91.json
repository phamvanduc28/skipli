{"ast":null,"code":"var _jsxFileName = \"/Volumes/vanduc/skipli/frontend/src/components/ChatComponent.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef, useCallback } from 'react';\nimport { useSocket } from '../context/SocketContext';\nimport { useAuth } from '../context/AuthContext';\nimport { messageAPI, handleApiError } from '../services/api';\nimport { toast } from 'react-toastify';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ChatComponent = ({\n  recipientId,\n  recipientName,\n  recipientType = 'employee'\n}) => {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const [newMessage, setNewMessage] = useState('');\n  const [loading, setLoading] = useState(true);\n  const [sending, setSending] = useState(false);\n  const messagesEndRef = useRef(null);\n  const {\n    socket,\n    isConnected\n  } = useSocket();\n  const {\n    user\n  } = useAuth();\n  const loadMessages = useCallback(async () => {\n    try {\n      setLoading(true);\n      const response = await messageAPI.getMessages(recipientId);\n      setMessages(response.data.data);\n    } catch (error) {\n      console.error('Error loading messages:', error);\n      toast.error(handleApiError(error));\n    } finally {\n      setLoading(false);\n    }\n  }, [recipientId]);\n  const scrollToBottom = () => {\n    var _messagesEndRef$curre;\n    (_messagesEndRef$curre = messagesEndRef.current) === null || _messagesEndRef$curre === void 0 ? void 0 : _messagesEndRef$curre.scrollIntoView({\n      behavior: 'smooth'\n    });\n  };\n  const handleNewMessage = useCallback(message => {\n    if (message.senderId === recipientId || message.recipientId === recipientId) {\n      setMessages(prev => [...prev, message]);\n    }\n  }, [recipientId]);\n  const handleMessageDelivered = useCallback(data => {\n    setMessages(prev => prev.map(msg => msg.id === data.messageId ? {\n      ...msg,\n      status: 'delivered'\n    } : msg));\n  }, []);\n  useEffect(() => {\n    if (recipientId) {\n      loadMessages();\n    }\n  }, [recipientId, loadMessages]);\n  useEffect(() => {\n    scrollToBottom();\n  }, [messages]);\n  useEffect(() => {\n    if (socket && isConnected) {\n      socket.on('newMessage', handleNewMessage);\n      socket.on('messageDelivered', handleMessageDelivered);\n      return () => {\n        socket.off('newMessage', handleNewMessage);\n        socket.off('messageDelivered', handleMessageDelivered);\n      };\n    }\n  }, [socket, isConnected, handleNewMessage, handleMessageDelivered]);\n  const sendMessage = async e => {\n    e.preventDefault();\n    if (!newMessage.trim() || sending || !recipientId) return;\n    try {\n      setSending(true);\n      const messageData = {\n        recipientId,\n        recipientType,\n        content: newMessage.trim(),\n        type: 'text'\n      };\n      const response = await messageAPI.sendMessage(messageData);\n\n      // Add message to local state immediately\n      setMessages(prev => [...prev, response.data.data]);\n      setNewMessage('');\n\n      // Emit via socket for real-time delivery\n      if (socket && isConnected) {\n        socket.emit('sendMessage', response.data.data);\n      }\n    } catch (error) {\n      console.error('Error sending message:', error);\n      toast.error(handleApiError(error));\n    } finally {\n      setSending(false);\n    }\n  };\n  const formatMessageTime = timestamp => {\n    const date = new Date(timestamp);\n    return date.toLocaleTimeString('en-US', {\n      hour: '2-digit',\n      minute: '2-digit'\n    });\n  };\n  const formatMessageDate = timestamp => {\n    const date = new Date(timestamp);\n    const today = new Date();\n    const yesterday = new Date(today);\n    yesterday.setDate(yesterday.getDate() - 1);\n    if (date.toDateString() === today.toDateString()) {\n      return 'Today';\n    } else if (date.toDateString() === yesterday.toDateString()) {\n      return 'Yesterday';\n    } else {\n      return date.toLocaleDateString('en-US', {\n        month: 'short',\n        day: 'numeric',\n        year: date.getFullYear() !== today.getFullYear() ? 'numeric' : undefined\n      });\n    }\n  };\n  const shouldShowDateSeparator = (currentMsg, prevMsg) => {\n    if (!prevMsg) return true;\n    const currentDate = new Date(currentMsg.createdAt).toDateString();\n    const prevDate = new Date(prevMsg.createdAt).toDateString();\n    return currentDate !== prevDate;\n  };\n  if (!recipientId) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-component\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"no-chat\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"no-chat-content\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"No conversation selected\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Select an employee to start messaging\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"style\", {\n        jsx: true,\n        children: `\n          .chat-component {\n            height: 100%;\n            display: flex;\n            align-items: center;\n            justify-content: center;\n            background: #f8fafc;\n          }\n          .no-chat-content {\n            text-align: center;\n            color: #666;\n          }\n          .no-chat-content h3 {\n            margin: 0 0 8px 0;\n            font-size: 1.2rem;\n            color: #333;\n          }\n          .no-chat-content p {\n            margin: 0;\n            font-size: 14px;\n          }\n        `\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat-component\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-header\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-header-info\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: recipientName || 'Chat'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"connection-status\",\n          children: isConnected ? 'Online' : 'Offline'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"messages-container\",\n      children: loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loading\",\n        children: \"Loading messages...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 11\n      }, this) : messages.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"empty-messages\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"No messages yet. Start the conversation!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"messages-list\",\n        children: [messages.map((message, index) => {\n          const showDateSeparator = shouldShowDateSeparator(message, messages[index - 1]);\n          const isOwn = message.senderId === user.uid;\n          return /*#__PURE__*/_jsxDEV(React.Fragment, {\n            children: [showDateSeparator && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"date-separator\",\n              children: /*#__PURE__*/_jsxDEV(\"span\", {\n                children: formatMessageDate(message.createdAt)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 200,\n                columnNumber: 23\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 199,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: `message ${isOwn ? 'own' : 'other'}`,\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"message-bubble\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"message-content\",\n                  children: message.content\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 205,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"message-meta\",\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"message-time\",\n                    children: formatMessageTime(message.createdAt)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 207,\n                    columnNumber: 25\n                  }, this), isOwn && /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: `message-status ${message.status || 'sent'}`,\n                    children: message.status === 'delivered' ? '✓✓' : '✓'\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 211,\n                    columnNumber: 27\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 206,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 204,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 203,\n              columnNumber: 19\n            }, this)]\n          }, message.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 197,\n            columnNumber: 17\n          }, this);\n        }), /*#__PURE__*/_jsxDEV(\"div\", {\n          ref: messagesEndRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 221,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: sendMessage,\n      className: \"message-input-form\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"message-input-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: newMessage,\n          onChange: e => setNewMessage(e.target.value),\n          placeholder: \"Type a message...\",\n          disabled: sending || !isConnected,\n          className: \"message-input\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 228,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          disabled: !newMessage.trim() || sending || !isConnected,\n          className: \"send-button\",\n          children: sending ? 'Sending...' : 'Send'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 236,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 227,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 226,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"style\", {\n      jsx: true,\n      children: `\n        .chat-component {\n          height: 100%;\n          display: flex;\n          flex-direction: column;\n          background: white;\n        }\n\n        .chat-header {\n          background: #f8fafc;\n          border-bottom: 1px solid #e2e8f0;\n          padding: 16px 20px;\n          flex-shrink: 0;\n        }\n\n        .chat-header-info h3 {\n          margin: 0 0 4px 0;\n          font-size: 1rem;\n          font-weight: 600;\n          color: #1a202c;\n        }\n\n        .connection-status {\n          font-size: 12px;\n          color: ${isConnected ? '#10b981' : '#ef4444'};\n          font-weight: 500;\n        }\n\n        .messages-container {\n          flex: 1;\n          overflow-y: auto;\n          padding: 20px;\n          display: flex;\n          flex-direction: column;\n        }\n\n        .loading,\n        .empty-messages {\n          display: flex;\n          align-items: center;\n          justify-content: center;\n          height: 100%;\n          color: #666;\n          font-size: 14px;\n        }\n\n        .messages-list {\n          display: flex;\n          flex-direction: column;\n          gap: 12px;\n        }\n\n        .date-separator {\n          display: flex;\n          align-items: center;\n          justify-content: center;\n          margin: 16px 0;\n        }\n\n        .date-separator span {\n          background: #f1f5f9;\n          color: #64748b;\n          padding: 4px 12px;\n          border-radius: 12px;\n          font-size: 12px;\n          font-weight: 500;\n        }\n\n        .message {\n          display: flex;\n          margin-bottom: 8px;\n        }\n\n        .message.own {\n          justify-content: flex-end;\n        }\n\n        .message.other {\n          justify-content: flex-start;\n        }\n\n        .message-bubble {\n          max-width: 70%;\n          padding: 12px 16px;\n          border-radius: 18px;\n          position: relative;\n        }\n\n        .message.own .message-bubble {\n          background: #3b82f6;\n          color: white;\n          border-bottom-right-radius: 4px;\n        }\n\n        .message.other .message-bubble {\n          background: #f1f5f9;\n          color: #1a202c;\n          border-bottom-left-radius: 4px;\n        }\n\n        .message-content {\n          font-size: 14px;\n          line-height: 1.4;\n          word-wrap: break-word;\n        }\n\n        .message-meta {\n          display: flex;\n          align-items: center;\n          justify-content: flex-end;\n          gap: 4px;\n          margin-top: 4px;\n        }\n\n        .message-time {\n          font-size: 11px;\n          opacity: 0.7;\n        }\n\n        .message-status {\n          font-size: 12px;\n          opacity: 0.7;\n        }\n\n        .message-status.delivered {\n          color: #10b981;\n        }\n\n        .message-input-form {\n          padding: 16px 20px;\n          border-top: 1px solid #e2e8f0;\n          background: white;\n          flex-shrink: 0;\n        }\n\n        .message-input-container {\n          display: flex;\n          gap: 12px;\n          align-items: center;\n        }\n\n        .message-input {\n          flex: 1;\n          padding: 12px 16px;\n          border: 1px solid #d1d5db;\n          border-radius: 20px;\n          font-size: 14px;\n          outline: none;\n        }\n\n        .message-input:focus {\n          border-color: #3b82f6;\n        }\n\n        .message-input:disabled {\n          background: #f9fafb;\n          color: #9ca3af;\n        }\n\n        .send-button {\n          padding: 10px 20px;\n          background: #3b82f6;\n          color: white;\n          border: none;\n          border-radius: 16px;\n          font-size: 14px;\n          font-weight: 500;\n          cursor: pointer;\n          transition: background 0.2s;\n        }\n\n        .send-button:hover:not(:disabled) {\n          background: #2563eb;\n        }\n\n        .send-button:disabled {\n          background: #9ca3af;\n          cursor: not-allowed;\n        }\n\n        @media (max-width: 768px) {\n          .chat-header {\n            padding: 12px 16px;\n          }\n\n          .messages-container {\n            padding: 16px;\n          }\n\n          .message-bubble {\n            max-width: 85%;\n            padding: 10px 14px;\n          }\n\n          .message-input-form {\n            padding: 12px 16px;\n          }\n\n          .message-input-container {\n            gap: 8px;\n          }\n\n          .send-button {\n            padding: 8px 16px;\n            font-size: 13px;\n          }\n        }\n      `\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 246,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 173,\n    columnNumber: 5\n  }, this);\n};\n_s(ChatComponent, \"RdNM9kDg+p2BMcDJVX+aadfDuyE=\", false, function () {\n  return [useSocket, useAuth];\n});\n_c = ChatComponent;\nexport default ChatComponent;\nvar _c;\n$RefreshReg$(_c, \"ChatComponent\");","map":{"version":3,"names":["React","useState","useEffect","useRef","useCallback","useSocket","useAuth","messageAPI","handleApiError","toast","jsxDEV","_jsxDEV","ChatComponent","recipientId","recipientName","recipientType","_s","messages","setMessages","newMessage","setNewMessage","loading","setLoading","sending","setSending","messagesEndRef","socket","isConnected","user","loadMessages","response","getMessages","data","error","console","scrollToBottom","_messagesEndRef$curre","current","scrollIntoView","behavior","handleNewMessage","message","senderId","prev","handleMessageDelivered","map","msg","id","messageId","status","on","off","sendMessage","e","preventDefault","trim","messageData","content","type","emit","formatMessageTime","timestamp","date","Date","toLocaleTimeString","hour","minute","formatMessageDate","today","yesterday","setDate","getDate","toDateString","toLocaleDateString","month","day","year","getFullYear","undefined","shouldShowDateSeparator","currentMsg","prevMsg","currentDate","createdAt","prevDate","className","children","fileName","_jsxFileName","lineNumber","columnNumber","jsx","length","index","showDateSeparator","isOwn","uid","Fragment","ref","onSubmit","value","onChange","target","placeholder","disabled","_c","$RefreshReg$"],"sources":["/Volumes/vanduc/skipli/frontend/src/components/ChatComponent.js"],"sourcesContent":["import React, { useState, useEffect, useRef, useCallback } from 'react';\nimport { useSocket } from '../context/SocketContext';\nimport { useAuth } from '../context/AuthContext';\nimport { messageAPI, handleApiError } from '../services/api';\nimport { toast } from 'react-toastify';\n\nconst ChatComponent = ({ recipientId, recipientName, recipientType = 'employee' }) => {\n  const [messages, setMessages] = useState([]);\n  const [newMessage, setNewMessage] = useState('');\n  const [loading, setLoading] = useState(true);\n  const [sending, setSending] = useState(false);\n  const messagesEndRef = useRef(null);\n\n  const { socket, isConnected } = useSocket();\n  const { user } = useAuth();\n\n  const loadMessages = useCallback(async () => {\n    try {\n      setLoading(true);\n      const response = await messageAPI.getMessages(recipientId);\n      setMessages(response.data.data);\n    } catch (error) {\n      console.error('Error loading messages:', error);\n      toast.error(handleApiError(error));\n    } finally {\n      setLoading(false);\n    }\n  }, [recipientId]);\n\n  const scrollToBottom = () => {\n    messagesEndRef.current?.scrollIntoView({ behavior: 'smooth' });\n  };\n\n  const handleNewMessage = useCallback((message) => {\n    if (message.senderId === recipientId || message.recipientId === recipientId) {\n      setMessages(prev => [...prev, message]);\n    }\n  }, [recipientId]);\n\n  const handleMessageDelivered = useCallback((data) => {\n    setMessages(prev =>\n      prev.map(msg =>\n        msg.id === data.messageId ? { ...msg, status: 'delivered' } : msg\n      )\n    );\n  }, []);\n\n  useEffect(() => {\n    if (recipientId) {\n      loadMessages();\n    }\n  }, [recipientId, loadMessages]);\n\n  useEffect(() => {\n    scrollToBottom();\n  }, [messages]);\n\n  useEffect(() => {\n    if (socket && isConnected) {\n      socket.on('newMessage', handleNewMessage);\n      socket.on('messageDelivered', handleMessageDelivered);\n\n      return () => {\n        socket.off('newMessage', handleNewMessage);\n        socket.off('messageDelivered', handleMessageDelivered);\n      };\n    }\n  }, [socket, isConnected, handleNewMessage, handleMessageDelivered]);\n\n  const sendMessage = async (e) => {\n    e.preventDefault();\n    \n    if (!newMessage.trim() || sending || !recipientId) return;\n\n    try {\n      setSending(true);\n      const messageData = {\n        recipientId,\n        recipientType,\n        content: newMessage.trim(),\n        type: 'text'\n      };\n\n      const response = await messageAPI.sendMessage(messageData);\n      \n      // Add message to local state immediately\n      setMessages(prev => [...prev, response.data.data]);\n      setNewMessage('');\n\n      // Emit via socket for real-time delivery\n      if (socket && isConnected) {\n        socket.emit('sendMessage', response.data.data);\n      }\n\n    } catch (error) {\n      console.error('Error sending message:', error);\n      toast.error(handleApiError(error));\n    } finally {\n      setSending(false);\n    }\n  };\n\n  const formatMessageTime = (timestamp) => {\n    const date = new Date(timestamp);\n    return date.toLocaleTimeString('en-US', { \n      hour: '2-digit', \n      minute: '2-digit' \n    });\n  };\n\n  const formatMessageDate = (timestamp) => {\n    const date = new Date(timestamp);\n    const today = new Date();\n    const yesterday = new Date(today);\n    yesterday.setDate(yesterday.getDate() - 1);\n\n    if (date.toDateString() === today.toDateString()) {\n      return 'Today';\n    } else if (date.toDateString() === yesterday.toDateString()) {\n      return 'Yesterday';\n    } else {\n      return date.toLocaleDateString('en-US', { \n        month: 'short', \n        day: 'numeric',\n        year: date.getFullYear() !== today.getFullYear() ? 'numeric' : undefined\n      });\n    }\n  };\n\n  const shouldShowDateSeparator = (currentMsg, prevMsg) => {\n    if (!prevMsg) return true;\n    const currentDate = new Date(currentMsg.createdAt).toDateString();\n    const prevDate = new Date(prevMsg.createdAt).toDateString();\n    return currentDate !== prevDate;\n  };\n\n  if (!recipientId) {\n    return (\n      <div className=\"chat-component\">\n        <div className=\"no-chat\">\n          <div className=\"no-chat-content\">\n            <h3>No conversation selected</h3>\n            <p>Select an employee to start messaging</p>\n          </div>\n        </div>\n        <style jsx>{`\n          .chat-component {\n            height: 100%;\n            display: flex;\n            align-items: center;\n            justify-content: center;\n            background: #f8fafc;\n          }\n          .no-chat-content {\n            text-align: center;\n            color: #666;\n          }\n          .no-chat-content h3 {\n            margin: 0 0 8px 0;\n            font-size: 1.2rem;\n            color: #333;\n          }\n          .no-chat-content p {\n            margin: 0;\n            font-size: 14px;\n          }\n        `}</style>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"chat-component\">\n      <div className=\"chat-header\">\n        <div className=\"chat-header-info\">\n          <h3>{recipientName || 'Chat'}</h3>\n          <div className=\"connection-status\">\n            {isConnected ? 'Online' : 'Offline'}\n          </div>\n        </div>\n      </div>\n\n      <div className=\"messages-container\">\n        {loading ? (\n          <div className=\"loading\">Loading messages...</div>\n        ) : messages.length === 0 ? (\n          <div className=\"empty-messages\">\n            <p>No messages yet. Start the conversation!</p>\n          </div>\n        ) : (\n          <div className=\"messages-list\">\n            {messages.map((message, index) => {\n              const showDateSeparator = shouldShowDateSeparator(message, messages[index - 1]);\n              const isOwn = message.senderId === user.uid;\n\n              return (\n                <React.Fragment key={message.id}>\n                  {showDateSeparator && (\n                    <div className=\"date-separator\">\n                      <span>{formatMessageDate(message.createdAt)}</span>\n                    </div>\n                  )}\n                  <div className={`message ${isOwn ? 'own' : 'other'}`}>\n                    <div className=\"message-bubble\">\n                      <div className=\"message-content\">{message.content}</div>\n                      <div className=\"message-meta\">\n                        <span className=\"message-time\">\n                          {formatMessageTime(message.createdAt)}\n                        </span>\n                        {isOwn && (\n                          <span className={`message-status ${message.status || 'sent'}`}>\n                            {message.status === 'delivered' ? '✓✓' : '✓'}\n                          </span>\n                        )}\n                      </div>\n                    </div>\n                  </div>\n                </React.Fragment>\n              );\n            })}\n            <div ref={messagesEndRef} />\n          </div>\n        )}\n      </div>\n\n      <form onSubmit={sendMessage} className=\"message-input-form\">\n        <div className=\"message-input-container\">\n          <input\n            type=\"text\"\n            value={newMessage}\n            onChange={(e) => setNewMessage(e.target.value)}\n            placeholder=\"Type a message...\"\n            disabled={sending || !isConnected}\n            className=\"message-input\"\n          />\n          <button \n            type=\"submit\" \n            disabled={!newMessage.trim() || sending || !isConnected}\n            className=\"send-button\"\n          >\n            {sending ? 'Sending...' : 'Send'}\n          </button>\n        </div>\n      </form>\n\n      <style jsx>{`\n        .chat-component {\n          height: 100%;\n          display: flex;\n          flex-direction: column;\n          background: white;\n        }\n\n        .chat-header {\n          background: #f8fafc;\n          border-bottom: 1px solid #e2e8f0;\n          padding: 16px 20px;\n          flex-shrink: 0;\n        }\n\n        .chat-header-info h3 {\n          margin: 0 0 4px 0;\n          font-size: 1rem;\n          font-weight: 600;\n          color: #1a202c;\n        }\n\n        .connection-status {\n          font-size: 12px;\n          color: ${isConnected ? '#10b981' : '#ef4444'};\n          font-weight: 500;\n        }\n\n        .messages-container {\n          flex: 1;\n          overflow-y: auto;\n          padding: 20px;\n          display: flex;\n          flex-direction: column;\n        }\n\n        .loading,\n        .empty-messages {\n          display: flex;\n          align-items: center;\n          justify-content: center;\n          height: 100%;\n          color: #666;\n          font-size: 14px;\n        }\n\n        .messages-list {\n          display: flex;\n          flex-direction: column;\n          gap: 12px;\n        }\n\n        .date-separator {\n          display: flex;\n          align-items: center;\n          justify-content: center;\n          margin: 16px 0;\n        }\n\n        .date-separator span {\n          background: #f1f5f9;\n          color: #64748b;\n          padding: 4px 12px;\n          border-radius: 12px;\n          font-size: 12px;\n          font-weight: 500;\n        }\n\n        .message {\n          display: flex;\n          margin-bottom: 8px;\n        }\n\n        .message.own {\n          justify-content: flex-end;\n        }\n\n        .message.other {\n          justify-content: flex-start;\n        }\n\n        .message-bubble {\n          max-width: 70%;\n          padding: 12px 16px;\n          border-radius: 18px;\n          position: relative;\n        }\n\n        .message.own .message-bubble {\n          background: #3b82f6;\n          color: white;\n          border-bottom-right-radius: 4px;\n        }\n\n        .message.other .message-bubble {\n          background: #f1f5f9;\n          color: #1a202c;\n          border-bottom-left-radius: 4px;\n        }\n\n        .message-content {\n          font-size: 14px;\n          line-height: 1.4;\n          word-wrap: break-word;\n        }\n\n        .message-meta {\n          display: flex;\n          align-items: center;\n          justify-content: flex-end;\n          gap: 4px;\n          margin-top: 4px;\n        }\n\n        .message-time {\n          font-size: 11px;\n          opacity: 0.7;\n        }\n\n        .message-status {\n          font-size: 12px;\n          opacity: 0.7;\n        }\n\n        .message-status.delivered {\n          color: #10b981;\n        }\n\n        .message-input-form {\n          padding: 16px 20px;\n          border-top: 1px solid #e2e8f0;\n          background: white;\n          flex-shrink: 0;\n        }\n\n        .message-input-container {\n          display: flex;\n          gap: 12px;\n          align-items: center;\n        }\n\n        .message-input {\n          flex: 1;\n          padding: 12px 16px;\n          border: 1px solid #d1d5db;\n          border-radius: 20px;\n          font-size: 14px;\n          outline: none;\n        }\n\n        .message-input:focus {\n          border-color: #3b82f6;\n        }\n\n        .message-input:disabled {\n          background: #f9fafb;\n          color: #9ca3af;\n        }\n\n        .send-button {\n          padding: 10px 20px;\n          background: #3b82f6;\n          color: white;\n          border: none;\n          border-radius: 16px;\n          font-size: 14px;\n          font-weight: 500;\n          cursor: pointer;\n          transition: background 0.2s;\n        }\n\n        .send-button:hover:not(:disabled) {\n          background: #2563eb;\n        }\n\n        .send-button:disabled {\n          background: #9ca3af;\n          cursor: not-allowed;\n        }\n\n        @media (max-width: 768px) {\n          .chat-header {\n            padding: 12px 16px;\n          }\n\n          .messages-container {\n            padding: 16px;\n          }\n\n          .message-bubble {\n            max-width: 85%;\n            padding: 10px 14px;\n          }\n\n          .message-input-form {\n            padding: 12px 16px;\n          }\n\n          .message-input-container {\n            gap: 8px;\n          }\n\n          .send-button {\n            padding: 8px 16px;\n            font-size: 13px;\n          }\n        }\n      `}</style>\n    </div>\n  );\n};\n\nexport default ChatComponent;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}